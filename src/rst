#!/usr/bin/env bash

trap 'sync' EXIT

Program="${0##*/}"

Usage() {
	read -d '' <<-EOF
		Usage: $Program [OPTION]...

		  -h, --help      - Displays this help information.
		  -f, --force     - Allow 'root' to run $Program(1).
		  -y, --yes       - Answers 'yes' to all questions.

	EOF

	printf '%s' "$REPLY"
}

Err() {
	printf '%s\n' "$Program: $2" 1>&2
	(( $1 > 0 )) && exit $1
}

while [[ -n $1 ]]; do
	case $1 in
		-h|--help)
			Usage
			exit 0 ;;

		-f|--force)
			Force=1 ;;

		-y|--yes)
			Yes=1 ;;

		*)
			Err 2 "$1: invaild option..." ;;
	esac
	shift
done

if (( ! UID && Force != 1 )); then
	Err 1 'denied to run as root...'
fi

Ask() {
	local Clear=1
	until (( Yes == 1 )); do
		read -p "Do you want to clear $1? [Y/n]: "
		case "${REPLY,,}" in
			yes|y|'')
				break ;;

			no|n)
				Clear=0
				break ;;

			*)
				Err 0 "$REPLY: invaild reply..." ;;
		esac
	done
	shift
	(( Clear == 1 )) && rm -rf -- "$@"
}

for Cache in "$HOME"/.cache/*; {
	[[ -e $Cache ]] || unset -v Cache
	break
}

if [[ -n $Cache ]]; then
	Ask cache "$HOME"/.cache/*
	unset -v Cache
fi

FFDir="$HOME"/.mozilla/firefox
FFCrash="$FFDir/Crash Reports" FFPings="$FFDir/Pending Pings"

if [[ -d $FFCrash || -d $FFPings ]]; then
	Ask "Firefox's reports" "$FFCrash" "$FFPings"
fi

unset -v FFDir FFCrash FFPings

VimInfo="$HOME"/.viminfo VimNetR="$HOME"/.vim/.netrwhist

if [[ -f $VimInfo || -f $VimNetR ]]; then
	Ask "Vim's cache" "$VimInfo" "$VimNetR"
fi

unset -v VimInfo VimNetR

NVimShada="${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/shada/main.shada

if [[ -f $NVimShada ]]; then
	Ask "Neovim's cache" "$NvimShada"
fi

unset -v NVimShada
