#!/usr/bin/env bash

trap 'sync' EXIT

Yes=0
Force=0

Usage() {
	while read; do
		printf '%s\n' "$REPLY"
	done <<-EOF
		Usage: rst [OPTIONS]

		  -h, --help      - Displays this help information.
		  -f, --force     - Allows \`root\` to run rst().
		  -y, --yes       - Answers \`Yes\` to all questions.

	EOF
}

ERR() {
	printf '%s\n' "ERR: $2" 1>&2
	[ $1 -gt 0 ] && exit $1
}

while [ -n "$1" ]; do
	case "$1" in

		-h|--help)
			Usage; exit 0 ;;

		-f|--force)
			Force=1 ;;

		-y|--yes)
			Yes=1 ;;

		*)
			ERR 1 "unknown option(s) $1..." ;;
	esac
	shift
done

if [ $UID -eq 0 -a $Force -ne 1 ]; then
	ERR 1 'denied to run rst() as root...'
fi

Ask() {
	local Answer=Yes

	while [ $Yes -ne 1 ]; do
		read -p "Do you want to clear $1? [Y/n]: "
		case "$REPLY" in

		[Yy][Ee][Ss]|[Yy]|'')
			break ;;

		[Nn][Oo]|[Nn])
			local Answer=No
			break ;;

		*)
			ERR 0 'invaild answer(s)...' ;;
		esac
	done
	shift
	[ "$Answer" = Yes ] && rm -rf "$@"
}

for CacheDir in $HOME/.cache/?*; do
	[ -e "$CacheDir" ] || unset CacheDir; break
done
[ -n "$CacheDir" ] && Ask cache $HOME/.cache/*

FFDir="$HOME/.mozilla/firefox"
FFCrash="$FFDir/Crash Reports"; FFPings="$FFDir/Pending Pings"
if [ -d "$FFCrash" -o -d "$FFPings" ]; then
	Ask "firefox's reports" "$FFCrash" "$FFPings"
fi

VimInfo="$HOME/.viminfo"; VimNetR="$HOME/.vim/.netrwhist"
if [ -f "$VimInfo" -o -f "$VimNetR" ]; then
	Ask "vim's cache" "$VimInfo" "$VimNetR"
fi
