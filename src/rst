#!/bin/sh

trap 'sync' EXIT

Program="${0##*/}"

Usage() {
	while read -r Curline; do
		printf '%b\n' "$Curline"
	done <<-EOF
		\rUsage: $Program [OPTIONS]

		\r  -h, --help      - Displays this help information.
		\r  -f, --force     - Allows 'root' to run $Program().
		\r  -y, --yes       - Answers 'yes' to all questions.

	EOF
	unset -v Curline
}

Err() {
	printf '%s\n' "$Program: $2" 1>&2
	test $1 -gt 0 && exit $1
}

while test "$1"; do
	case "$1" in
		-h|--help)
			Usage; exit 0 ;;

		-f|--force)
			Force=True ;;

		-y|--yes)
			Yes=True ;;

		*)
			Err 1 "unknown option(s) $1..." ;;
	esac
	shift
done

if test "$USER" = root -a "$Force" != True; then
	Err 1 "denied to run $Program() as root..."
fi

Ask() {
	local Answer=Yes
	while test "$Yes" != True; do
		read -p "Do you want to clear $1? [Y/n]: " REPLY
		case "$REPLY" in
			[Yy][Ee][Ss]|[Yy]|'')
				break ;;

			[Nn][Oo]|[Nn])
				local Answer=No
				break ;;

			*)
				Err 0 'Invaild answer(s)...' ;;
		esac
	done
	shift
	test "$Answer" = Yes && rm -rf "$@"
}

for Cachedir in "$HOME"/.cache/?*; do
	test -e "$Cachedir" || unset -v Cachedir
	break
done

test -n "$Cachedir" && Ask cache "$HOME"/.cache/*

FFDir="$HOME"/.mozilla/firefox
FFCrash="$FFDir/Crash Reports" FFPings="$FFDir/Pending Pings"

if test -d "$FFCrash" -o -d "$FFPings"; then
	Ask "firefox's reports" "$FFCrash" "$FFPings"
fi

Viminfo="$HOME"/.viminfo Vimnetr="$HOME"/.vim/.netrwhist

if test -f "$Viminfo" -o -f "$Vimnetr"; then
	Ask "vim's cache" "$Viminfo" "$Vimnetr"
fi
