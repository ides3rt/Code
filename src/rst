#!/bin/sh

trap 'sync' EXIT

Yes=0
Force=0

Usage() {
	while read -r REPLY; do
		printf '%b\n' "$REPLY"
	done <<-EOF
		\rUsage: rst [OPTIONS]

		\r  -h, --help      - Displays this help information.
		\r  -f, --force     - Allows \`root\` to run rst().
		\r  -y, --yes       - Answers \`Yes\` to all questions.

	EOF
}

ERR() {
	printf '%s\n' "ERR: $2" 1>&2
	test $1 -gt 0 && exit $1
}

while test "$1"; do
	case "$1" in
		-h|--help)
			Usage; exit 0 ;;

		-f|--force)
			Force=1 ;;

		-y|--yes)
			Yes=1 ;;

		*)
			ERR 1 "unknown option(s) $1..." ;;
	esac
	shift
done

if test `id -u` -eq 0 -a $Force -eq 0; then
	ERR 1 'denied to run rst() as root...'
fi

Ask() {
	local Answer=Yes
	while test $Yes -eq 0; do
		read -p "Do you want to clear $1? [Y/n]: " REPLY
		case "$REPLY" in
			[Yy][Ee][Ss]|[Yy]|'')
				break ;;

			[Nn][Oo]|[Nn])
				local Answer=No
				break ;;

			*)
				ERR 0 'Invaild answer(s)...' ;;
		esac
	done
	shift
	test "$Answer" = Yes && rm -rf "$@"
}

for CacheDir in $HOME/.cache/?*; do
	test -e "$CacheDir" || unset CacheDir
	break
done

test -n "$CacheDir" && Ask cache $HOME/.cache/*

FFDir="$HOME/.mozilla/firefox"
FFCrash="$FFDir/Crash Reports"; FFPings="$FFDir/Pending Pings"

if test -d "$FFCrash" -o -d "$FFPings"; then
	Ask "firefox's reports" "$FFCrash" "$FFPings"
fi

viminfo="$HOME/.viminfo"; vimnetr="$HOME/.vim/.netrwhist"

if test -f "$viminfo" -o -f "$vimnetr"; then
	Ask "vim's cache" "$viminfo" "$vimnetr"
fi
