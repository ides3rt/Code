#!/usr/bin/env bash

trap 'sync' EXIT

Program="${0##*/}"

Err() {
	printf '%s\n' "Err: $2" 1>&2
	(( $1 > 0 )) && exit $1
}

(( $# > 0 )) && Err 1 "$Program() doesn't accept argument..."

Bakdir="/media/$USER/USB1p2/GitHub"
Gitdir="$HOME/GitHub"

[[ -d $Bakdir ]] || Err 1 "'$Bakdir' doesn't exists..."

Repositories=(
	'Code' 'colemak-dhk' 'config' 'Documents'
	'doasedit' 'dotfiles' 'firefox' 'gists'
	'librewolf' 'Monofur' 'Pictures' 'exit'
)

Count=${#Repositories[@]}

PS3="Select your repository [1-$Count]: "

select Repository in "${Repositories[@]}"; do
	[[ -z $Repository ]] && continue
	case "$Repository" in
		exit)
			exit 0 ;;

		gists)
			cp -r $Gitdir/gists/* $Bakdir/gists/ ;;

		*)
			Destdir="$Bakdir/repositories/$Repository"
			[[ -d $Destdir ]] && rm -rf "$Destdir"

			URL="https://github.com/ides3rt/$Repository"
			Repodir="$Gitdir/repositories/$Repository"

			if [[ -d $Repodir ]]; then
				cp -r "$Repodir" "$Destdir"
			else
				Err 0 "'$Repodir' doesn't exists use \`git clone\` instead..."
				git clone -q "$URL" "$Destdir" || Err 0 "'$Repository' doesn't exists..."
			fi ;;
	esac
done
