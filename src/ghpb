#!/usr/bin/env bash

trap 'sync' EXIT

Program="${0##*/}"

Err() {
	printf '%s\n' "$Program: $2" 1>&2
	(( $1 > 0 )) && exit $1
}

(( $# > 0 )) && Err 2 "$Program(1) needn't argument..."

if type -P git &>/dev/null; then
	Err 2 'dependency, `git`, not met...'
fi

GitDIR="$HOME"/GitHub/ides3rt
BackDIR=/media/"$USER"/USB1p2/GitHub/ides3rt

[[ -d $BackDIR ]] || Err 2 "$BackDIR: not a directory..."

Repositories=(
	Code
	doasedit
	dotfiles
	extras
	firefox
	gists
	grammak
	Monofur
	setup
	exit
)

Count=${#Repositories[@]}

PS3="Select your repository [1-$Count]: "

select Repository in "${Repositories[@]}"; do
	[[ -z $Repository ]] && continue
	case "$Repository" in
		exit)
			exit 0 ;;

		gists)
			cp -r -- "$GitDIR"/gists/* "$BackDIR"/gists/ ;;

		*)
			DestDIR="$BackDIR/projects/$Repository"
			[[ -d $DestDIR ]] && rm -rf "$DestDIR"

			URL=https://github.com/ides3rt/"$Repository"
			Repodir="$GitDIR/projects/$Repository"

			if [[ -d $Repodir ]]; then
				cp -r -- "$Repodir" "$DestDIR"
			else
				Err 0 "$Repodir: not found, use \`git clone\` instead..."

				if git clone -q "$URL" "$DestDIR"; then
					Err 0 "$Repository: not found..."
				fi
			fi ;;
	esac
done
