#!/usr/bin/env bash

trap 'sync' EXIT

BakDir=/media/ides3rt/USB1p2/GitHub
GitDir="$HOME/GitHub"

RepoDir="$GitDir/repositories"
GistDir="$GitDir/gists"

RepoBak="$BakDir/repositories"
GistBak="$BakDir/gists"

[[ -d "$BakDir" ]] ||
	{ printf '%s\n' "ERR: $BakDir doesn't exists.." 1>&2; exit 1 ;}

Repositories=(
	'Code' 'config' 'Documents' 'doasedit'
	'dotfiles' 'firefox' 'gists' 'librewolf'
	'Pictures' 'exit'
)

Count=${#Repositories[@]}

PS3="Select your repository [1-$Count]: "

select Repository in ${Repositories[@]}; do
	[[ -z $Repository ]] && continue
	case "$Repository" in
		exit)
			exit 0 ;;

		gists)
			cp $GistDir/* $GistBak/ ;;

		*)
			DlDir="$RepoBak/$Repository"
			[[ -d "$DlDir" ]] && rm -rf $DlDir

			URL="https://github.com/ides3rt/$Repository"

			if [[ -d $RepoDir/$Repository ]]; then
				cp -r $RepoDir/$Repository $RepoBak/$Repository
			else
				printf '%s\n' \
					" \`$RepoDir/$Repository\` doesn't exists use \`git clone\` instead"
				git clone -q "$URL" "$DlDir" ||
					printf '%s\n' "$Repository doesn't exists..."
			fi ;;
	esac
done
