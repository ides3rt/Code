#!/usr/bin/env bash

trap 'sync' EXIT

progrm=${0##*/}

panic() {
	printf '%s\n' "$progrm: $2" 1>&2
	(( $1 > 0 )) && exit $1
}

(( $# > 0 )) && panic 1 "$progrm(1) needn't argument..."

if ! type -P git &>/dev/null; then
	panic 1 'dependency, `git`, not met...'
fi

git_dir=$HOME/GitHub/ides3rt
bak_dir=/media/$USER/USB1p2/GitHub/ides3rt

[[ -d $bak_dir ]] || panic 1 "$bak_dir: not a directory..."

repo_arr=(
	Code
	doasedit
	dotfiles
	extras
	firefox
	gists
	grammak
	Monofur
	setup
	exit
)

repo_nr=${#repo_arr[@]}

PS3="Select your repository [1-$repo_nr]: "

select repo in "${repo_arr[@]}"; do
	[[ -z $repo ]] && continue
	case $repo in
		exit)
			exit 0 ;;

		gists)
			cp -r -- "$git_dir"/gists/* "$bak_dir"/gists/ ;;

		*)
			dest_dir=$bak_dir/projects/$repo
			[[ -d $dest_dir ]] && rm -rf -- "$dest_dir"

			url=https://github.com/ides3rt/$repo
			repo_dir=$git_dir/projects/$repo

			if [[ -d $repo_dir ]]; then
				cp -r -- "$repo_dir" "$dest_dir"
			else
				panic 0 "$repo_dir: not found, use \`git clone\` instead..."

				if git clone -q "$url" "$dest_dir"; then
					panic 0 "$repo: not found..."
				fi
			fi ;;
	esac
done
